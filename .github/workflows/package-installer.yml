name: Package Installer

on:
    workflow_dispatch:
        inputs:
            release:
                type: string
                description: "Whether to release the build"
                required: true
    workflow_call:
        inputs:
            release:
                type: string
                description: "Whether to release the build"
                required: true

env:
    VERSION: 1.0.0

jobs:
    build:
        permissions: write-all
        runs-on: windows-latest

        steps:
            - name: "[1/8] Chechout Branch"
              uses: actions/checkout@v2
            - name: "[2/8] Install NSIS"
              uses: repolevedavaj/install-nsis@v1.0.2
              with:
                nsis-version: "3.10"
            - name: "[3/8] Update Rust"
              run: rustup update
            - name: "[4/8] Build Rust"
              run: |
                cd ${{github.workspace}}\VersionManager
                cargo b -r
                cp .\target\release\VersionManager.exe ${{github.workspace}}
            - name: "[5/8] Build NSIS Installer and zip files"
              run: |
                cd ${{github.workspace}}
                makensis -NOCD ${{github.workspace}}\install-frc-stuff.nsi
                $compress = @{
                    Path = "${{github.workspace}}\install-frc-stuff.exe", "${{github.workspace}}\VersionManager.exe", "${{github.workspace}}\lib"
                    CompressionLevel = "Optimal"
                    DestinationPath = "${{github.workspace}}\install-frc-stuff-out.zip"
                }
                Compress-Archive @compress
            - name: "[6/8] Upload Artifact"
              if: ${{ (github.event.inputs.release == 'false') && (inputs.release == 'false') }}
              uses: actions/upload-artifact@v3
              with:
                name: install-frc-stuff.zip
                path: ${{github.workspace}}\install-frc-stuff-out.zip
            - name: "[7/8] Create Release"
              if: ${{ (github.event.inputs.release == 'true') || (inputs.release == 'true') }}
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                tag_name: "v${{env.VERSION}}"
                release_name: "Install FRC Stuff Release v${{env.VERSION}}"
                draft: false
                prerelease: false
            - name: "[8/8] Upload Release"
              if: ${{ (github.event.inputs.release == 'true') || (inputs.release == 'true') }}
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                upload_url: ${{steps.create_release.outputs.upload_url}}
                asset_name: "install-frc-stuff.zip"
                asset_path: ${{github.workspace}}\install-frc-stuff-out.zip
                asset_content_type: application/zip
              

